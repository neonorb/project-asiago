{
  "name": "Project Asiago",
  "tagline": "Reinventing the system.",
  "body": "# Project Asiago\r\nProject Asiago is the idea that the current computer system is inherently broken, and needs to be fixed. Project Asiago is reinventing this system to achieve it's full potential.\r\n\r\n# Projects\r\nHere are all the sub-projects in Project Asiago:\r\n - [Aura](https://github.com/neonorb/aura) - OS\r\n - [Feta](https://github.com/neonorb/feta) - standard library\r\n - [Mish](https://github.com/neonorb/mish) - language library\r\n - [Mish Linux](https://github.com/neonorb/mish-linux) - Linux base for Mish\r\n - [Make Base](https://github.com/neonorb/make-base) - shared management/build scripts\r\n - [Project Asiago](https://github.com/neonorb/project-asiago) - scripts used to build and maintain all these projects\r\n\r\n# Getting\r\nThis repository contains a makefile that allows you to easily download and build all the required dependencies.\r\n\r\nYou'll first need to setup your directories. The rest of this document assumes your current directory is `~/project-asiago/project-asiago/`\r\n```\r\n$ mkdir project-asiago\r\n$ cd project-asiago\r\n$ git clone git@github.com:neonorb/project-asiago\r\n$ cd project-asiago\r\n$ make init\r\n```\r\n\r\nYour directory structure should look something like this (`...` means there's more stuff not listed):\r\n\r\n```\r\nproject-asiago/\r\n├─project-asiago/\r\n│ ├─makefile\r\n│ └─...\r\n├─aura/\r\n│ ├─makefile\r\n│ ├─src/\r\n│ │ └─...\r\n│ └─...\r\n├─mish/\r\n│ └─...\r\n└─...\r\n```\r\n\r\n## Aura\r\nIf you'd like to use the operating system, you may do so here. No cross compiler required!\r\n\r\n```\r\n$ make aura\r\n```\r\n\r\n### QEMU\r\n```\r\n# apt install qemu-system-x86_64\r\n$ make run-aura\r\n```\r\n\r\n### Bare Metal\r\nBefore doing this, make **sure** it's the right disk.\r\n\r\n```\r\n# dd if=../aura/build/aura.img of=/dev/sdx bs=1K\r\n```\r\n\r\n## On Linux\r\nIf you'd like to run Mish code on Linux, you can do this as well.\r\n\r\n### Building\r\n```\r\n$ make mish-linux\r\n```\r\n\r\n### Installing & Running\r\nIf you'd like, you may skip installing Mish, and simply execute the binary directly via: `../mish-linux/build/mish`\r\n\r\nOtherwise, you may just install Mish:\r\n\r\n```\r\n# make install-linux\r\n$ mish\r\n```\r\n\r\n# Contributing\r\nIf you'd like to contribute, take a look at the issue pages on all the repos. If you find something you want to work on, be it a bug fix or an entirly new feature, go ahead!\r\n\r\nYou will need a GPG key to sign your commits with, there is a great tutorial over [here](http://blog.dpg.io/articles/gpg-linux) to get you started. You will also want to [add it to your GitHub account](https://help.github.com/articles/adding-a-new-gpg-key-to-your-github-account/).\r\n\r\nNext, you'll want to fork the desired repository (as you don't have write permissions to the main one). Then you need to update your repository remote locations, to do this, run: `make init GIT_ROOT=git@github.com:<username>`\r\n\r\nWe use the [Git Flow](http://nvie.com/posts/a-successful-git-branching-model/) branching model, so you'll need to checkout the `develop` branch: `make checkout develop`\r\n\r\nOnce you make your desired changes, write any necessary unit tests and run them. Although it *should* be automatic, **make sure you sign the commit(s)**.\r\n\r\nOnce you've done all that, you may submit a push request.\r\n\r\n# Code Style Guide\r\nTry to keep the style similar to what we have already. Main points:\r\n - braces on same line\r\n - tabs > spaces\r\n - classes are like this: `MyClassThatIReallyLove`\r\n - variables: `myVariable`\r\n - constants: `MY_CONSTANT`\r\n - functions: `myFunction()`\r\n - namespaces\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}